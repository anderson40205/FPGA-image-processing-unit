// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _NonMaxSuppression_HH_
#define _NonMaxSuppression_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Sobel_1920u_1080ufYi.h"
#include "NonMaxSuppressionmb6.h"

namespace ap_rtl {

struct NonMaxSuppression : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > fifo3_value_dout;
    sc_in< sc_logic > fifo3_value_empty_n;
    sc_out< sc_logic > fifo3_value_read;
    sc_in< sc_lv<2> > fifo3_grad_dout;
    sc_in< sc_logic > fifo3_grad_empty_n;
    sc_out< sc_logic > fifo3_grad_read;
    sc_out< sc_lv<8> > fifo4_din;
    sc_in< sc_logic > fifo4_full_n;
    sc_out< sc_logic > fifo4_write;


    // Module declarations
    NonMaxSuppression(sc_module_name name);
    SC_HAS_PROCESS(NonMaxSuppression);

    ~NonMaxSuppression();

    sc_trace_file* mVcdFile;

    Sobel_1920u_1080ufYi* line_buf_value_U;
    NonMaxSuppressionmb6* line_buf_grad_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > fifo3_value_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln324_reg_716;
    sc_signal< sc_logic > fifo3_grad_blk_n;
    sc_signal< sc_logic > fifo4_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > icmp_ln324_reg_716_pp0_iter1_reg;
    sc_signal< sc_lv<11> > xi_0_i_reg_230;
    sc_signal< sc_lv<1> > icmp_ln323_fu_241_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > yi_fu_247_p2;
    sc_signal< sc_lv<11> > yi_reg_706;
    sc_signal< sc_lv<1> > and_ln382_1_fu_275_p2;
    sc_signal< sc_lv<1> > and_ln382_1_reg_711;
    sc_signal< sc_lv<1> > icmp_ln324_fu_281_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<11> > xi_fu_287_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<11> > line_buf_value_addr_reg_725;
    sc_signal< sc_lv<11> > line_buf_grad_addr_reg_731;
    sc_signal< sc_lv<1> > icmp_ln382_2_fu_309_p2;
    sc_signal< sc_lv<1> > icmp_ln382_2_reg_737;
    sc_signal< sc_lv<1> > icmp_ln382_2_reg_737_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln382_3_fu_315_p2;
    sc_signal< sc_lv<1> > icmp_ln382_3_reg_742;
    sc_signal< sc_lv<1> > icmp_ln382_3_reg_742_pp0_iter1_reg;
    sc_signal< sc_lv<8> > window_buf_1_1_val_reg_747;
    sc_signal< sc_lv<1> > icmp_ln368_fu_480_p2;
    sc_signal< sc_lv<1> > icmp_ln368_reg_752;
    sc_signal< sc_lv<1> > icmp_ln375_fu_512_p2;
    sc_signal< sc_lv<1> > icmp_ln375_reg_757;
    sc_signal< sc_lv<8> > select_ln360_fu_564_p3;
    sc_signal< sc_lv<8> > select_ln360_reg_762;
    sc_signal< sc_lv<1> > and_ln374_fu_584_p2;
    sc_signal< sc_lv<1> > and_ln374_reg_767;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter1_state4;
    sc_signal< sc_lv<11> > line_buf_value_address0;
    sc_signal< sc_logic > line_buf_value_ce0;
    sc_signal< sc_lv<24> > line_buf_value_q0;
    sc_signal< sc_logic > line_buf_value_ce1;
    sc_signal< sc_logic > line_buf_value_we1;
    sc_signal< sc_lv<24> > line_buf_value_d1;
    sc_signal< sc_lv<11> > line_buf_grad_address0;
    sc_signal< sc_logic > line_buf_grad_ce0;
    sc_signal< sc_lv<6> > line_buf_grad_q0;
    sc_signal< sc_logic > line_buf_grad_ce1;
    sc_signal< sc_logic > line_buf_grad_we1;
    sc_signal< sc_lv<6> > line_buf_grad_d1;
    sc_signal< sc_lv<11> > yi_0_i_reg_219;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > zext_ln334_fu_293_p1;
    sc_signal< sc_lv<8> > window_buf_0_1_val_fu_132;
    sc_signal< sc_lv<8> > window_buf_0_1_val_1_fu_136;
    sc_signal< sc_lv<8> > window_buf_0_2_val_fu_342_p4;
    sc_signal< sc_lv<8> > value_nms_fu_140;
    sc_signal< sc_lv<8> > value_nms_1_fu_144;
    sc_signal< sc_lv<8> > window_buf_1_2_val_fu_352_p4;
    sc_signal< sc_lv<8> > window_buf_2_1_val_fu_148;
    sc_signal< sc_lv<8> > window_buf_2_1_val_1_fu_152;
    sc_signal< sc_lv<2> > grad_nms_fu_156;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<9> > tmp_8_fu_253_p4;
    sc_signal< sc_lv<1> > icmp_ln382_fu_263_p2;
    sc_signal< sc_lv<1> > icmp_ln382_1_fu_269_p2;
    sc_signal< sc_lv<9> > tmp_9_fu_299_p4;
    sc_signal< sc_lv<16> > tmp_fu_372_p4;
    sc_signal< sc_lv<4> > tmp_1_fu_391_p4;
    sc_signal< sc_lv<1> > icmp_ln354_fu_416_p2;
    sc_signal< sc_lv<1> > icmp_ln354_1_fu_422_p2;
    sc_signal< sc_lv<1> > or_ln354_fu_428_p2;
    sc_signal< sc_lv<1> > icmp_ln361_fu_448_p2;
    sc_signal< sc_lv<1> > icmp_ln361_1_fu_454_p2;
    sc_signal< sc_lv<1> > or_ln361_fu_460_p2;
    sc_signal< sc_lv<1> > icmp_ln368_1_fu_486_p2;
    sc_signal< sc_lv<1> > or_ln368_fu_492_p2;
    sc_signal< sc_lv<1> > icmp_ln353_fu_410_p2;
    sc_signal< sc_lv<1> > icmp_ln360_fu_442_p2;
    sc_signal< sc_lv<1> > or_ln360_fu_518_p2;
    sc_signal< sc_lv<1> > icmp_ln367_fu_474_p2;
    sc_signal< sc_lv<1> > xor_ln360_fu_524_p2;
    sc_signal< sc_lv<1> > and_ln367_fu_530_p2;
    sc_signal< sc_lv<8> > select_ln368_fu_498_p3;
    sc_signal< sc_lv<8> > select_ln354_fu_434_p3;
    sc_signal< sc_lv<8> > select_ln367_fu_536_p3;
    sc_signal< sc_lv<1> > xor_ln353_fu_552_p2;
    sc_signal< sc_lv<1> > and_ln360_fu_558_p2;
    sc_signal< sc_lv<8> > select_ln361_fu_466_p3;
    sc_signal< sc_lv<8> > select_ln353_fu_544_p3;
    sc_signal< sc_lv<1> > or_ln367_fu_572_p2;
    sc_signal< sc_lv<1> > icmp_ln374_fu_506_p2;
    sc_signal< sc_lv<1> > xor_ln367_fu_578_p2;
    sc_signal< sc_lv<1> > or_ln375_fu_625_p2;
    sc_signal< sc_lv<8> > select_ln375_fu_629_p3;
    sc_signal< sc_lv<1> > and_ln382_fu_642_p2;
    sc_signal< sc_lv<1> > and_ln382_2_fu_646_p2;
    sc_signal< sc_lv<8> > select_ln374_fu_636_p3;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<11> ap_const_lv11_438;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<11> ap_const_lv11_435;
    static const sc_lv<11> ap_const_lv11_780;
    static const sc_lv<11> ap_const_lv11_77D;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln360_fu_558_p2();
    void thread_and_ln367_fu_530_p2();
    void thread_and_ln374_fu_584_p2();
    void thread_and_ln382_1_fu_275_p2();
    void thread_and_ln382_2_fu_646_p2();
    void thread_and_ln382_fu_642_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter1_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_fifo3_grad_blk_n();
    void thread_fifo3_grad_read();
    void thread_fifo3_value_blk_n();
    void thread_fifo3_value_read();
    void thread_fifo4_blk_n();
    void thread_fifo4_din();
    void thread_fifo4_write();
    void thread_icmp_ln323_fu_241_p2();
    void thread_icmp_ln324_fu_281_p2();
    void thread_icmp_ln353_fu_410_p2();
    void thread_icmp_ln354_1_fu_422_p2();
    void thread_icmp_ln354_fu_416_p2();
    void thread_icmp_ln360_fu_442_p2();
    void thread_icmp_ln361_1_fu_454_p2();
    void thread_icmp_ln361_fu_448_p2();
    void thread_icmp_ln367_fu_474_p2();
    void thread_icmp_ln368_1_fu_486_p2();
    void thread_icmp_ln368_fu_480_p2();
    void thread_icmp_ln374_fu_506_p2();
    void thread_icmp_ln375_fu_512_p2();
    void thread_icmp_ln382_1_fu_269_p2();
    void thread_icmp_ln382_2_fu_309_p2();
    void thread_icmp_ln382_3_fu_315_p2();
    void thread_icmp_ln382_fu_263_p2();
    void thread_internal_ap_ready();
    void thread_line_buf_grad_address0();
    void thread_line_buf_grad_ce0();
    void thread_line_buf_grad_ce1();
    void thread_line_buf_grad_d1();
    void thread_line_buf_grad_we1();
    void thread_line_buf_value_address0();
    void thread_line_buf_value_ce0();
    void thread_line_buf_value_ce1();
    void thread_line_buf_value_d1();
    void thread_line_buf_value_we1();
    void thread_or_ln354_fu_428_p2();
    void thread_or_ln360_fu_518_p2();
    void thread_or_ln361_fu_460_p2();
    void thread_or_ln367_fu_572_p2();
    void thread_or_ln368_fu_492_p2();
    void thread_or_ln375_fu_625_p2();
    void thread_real_start();
    void thread_select_ln353_fu_544_p3();
    void thread_select_ln354_fu_434_p3();
    void thread_select_ln360_fu_564_p3();
    void thread_select_ln361_fu_466_p3();
    void thread_select_ln367_fu_536_p3();
    void thread_select_ln368_fu_498_p3();
    void thread_select_ln374_fu_636_p3();
    void thread_select_ln375_fu_629_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_1_fu_391_p4();
    void thread_tmp_8_fu_253_p4();
    void thread_tmp_9_fu_299_p4();
    void thread_tmp_fu_372_p4();
    void thread_window_buf_0_2_val_fu_342_p4();
    void thread_window_buf_1_2_val_fu_352_p4();
    void thread_xi_fu_287_p2();
    void thread_xor_ln353_fu_552_p2();
    void thread_xor_ln360_fu_524_p2();
    void thread_xor_ln367_fu_578_p2();
    void thread_yi_fu_247_p2();
    void thread_zext_ln334_fu_293_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
