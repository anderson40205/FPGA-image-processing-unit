// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Sobel_1920u_1080u_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        fifo2_dout,
        fifo2_empty_n,
        fifo2_read,
        fifo3_value_din,
        fifo3_value_full_n,
        fifo3_value_write,
        fifo3_grad_din,
        fifo3_grad_full_n,
        fifo3_grad_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state30 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] fifo2_dout;
input   fifo2_empty_n;
output   fifo2_read;
output  [7:0] fifo3_value_din;
input   fifo3_value_full_n;
output   fifo3_value_write;
output  [1:0] fifo3_grad_din;
input   fifo3_grad_full_n;
output   fifo3_grad_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg fifo2_read;
reg[7:0] fifo3_value_din;
reg fifo3_value_write;
reg fifo3_grad_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    fifo2_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln221_reg_969;
reg    fifo3_value_blk_n;
reg    ap_enable_reg_pp0_iter26;
reg   [0:0] and_ln299_2_reg_984;
reg   [0:0] and_ln299_2_reg_984_pp0_iter25_reg;
reg    fifo3_grad_blk_n;
reg   [10:0] xi_0_i_reg_250;
wire   [0:0] icmp_ln220_fu_280_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] yi_fu_286_p2;
reg   [10:0] yi_reg_959;
wire   [0:0] and_ln299_1_fu_314_p2;
reg   [0:0] and_ln299_1_reg_964;
wire   [0:0] icmp_ln221_fu_320_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
reg    ap_block_state29_pp0_stage0_iter26;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln221_reg_969_pp0_iter1_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter2_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter3_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter4_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter5_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter6_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter7_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter8_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter9_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter10_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter11_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter12_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter13_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter14_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter15_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter16_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter17_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter18_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter19_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter20_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter21_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter22_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter23_reg;
reg   [0:0] icmp_ln221_reg_969_pp0_iter24_reg;
wire   [10:0] xi_fu_326_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [10:0] line_buf_addr_reg_978;
wire   [0:0] and_ln299_2_fu_365_p2;
reg   [0:0] and_ln299_2_reg_984_pp0_iter1_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter2_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter3_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter4_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter5_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter6_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter7_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter8_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter9_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter10_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter11_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter12_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter13_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter14_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter15_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter16_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter17_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter18_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter19_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter20_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter21_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter22_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter23_reg;
reg   [0:0] and_ln299_2_reg_984_pp0_iter24_reg;
reg   [7:0] window_buf_2_1_2_reg_988;
reg   [7:0] window_buf_1_2_reg_994;
reg   [7:0] window_buf_2_2_reg_999;
wire   [10:0] add_ln254_fu_454_p2;
reg   [10:0] add_ln254_reg_1004;
wire   [9:0] add_ln261_1_fu_482_p2;
reg   [9:0] add_ln261_1_reg_1009;
wire  signed [10:0] sub_ln254_2_fu_545_p2;
reg  signed [10:0] sub_ln254_2_reg_1014;
wire  signed [10:0] sub_ln261_2_fu_577_p2;
reg  signed [10:0] sub_ln261_2_reg_1019;
reg  signed [10:0] sub_ln261_2_reg_1019_pp0_iter3_reg;
wire   [0:0] icmp_ln274_fu_583_p2;
reg   [0:0] icmp_ln274_reg_1024;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter3_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter4_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter5_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter6_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter7_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter8_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter9_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter10_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter11_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter12_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter13_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter14_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter15_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter16_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter17_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter18_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter19_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter20_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter21_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter22_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter23_reg;
reg   [0:0] icmp_ln274_reg_1024_pp0_iter24_reg;
wire  signed [21:0] mul_ln265_fu_906_p2;
reg  signed [21:0] mul_ln265_reg_1038;
wire  signed [21:0] grp_fu_912_p3;
reg  signed [21:0] add_ln265_reg_1043;
reg    ap_enable_reg_pp0_iter4;
wire   [31:0] grp_fu_272_p1;
reg   [31:0] x_assign_reg_1053;
wire   [31:0] grp_fu_275_p2;
reg   [31:0] x_assign_2_reg_1058;
reg   [0:0] p_Result_s_reg_1063;
wire   [31:0] p_Val2_5_fu_746_p3;
reg   [31:0] p_Val2_5_reg_1068;
wire   [7:0] select_ln301_fu_785_p3;
reg   [7:0] select_ln301_reg_1074;
reg   [7:0] select_ln301_reg_1074_pp0_iter24_reg;
reg   [7:0] select_ln301_reg_1074_pp0_iter25_reg;
wire  signed [31:0] t_int_fu_793_p1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state4;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
wire   [10:0] line_buf_address0;
reg    line_buf_ce0;
wire   [23:0] line_buf_q0;
reg    line_buf_ce1;
reg    line_buf_we1;
wire   [23:0] line_buf_d1;
reg   [10:0] yi_0_i_reg_239;
reg    ap_block_state1;
wire    ap_CS_fsm_state30;
wire   [31:0] ap_phi_reg_pp0_iter0_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter1_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter2_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter3_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter4_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter5_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter6_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter7_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter8_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter9_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter10_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter11_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter12_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter13_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter14_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter15_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter16_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter17_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter18_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter19_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter20_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter21_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter22_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter23_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter24_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter25_t_int_0_i_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter26_t_int_0_i_reg_261;
wire   [63:0] zext_ln231_fu_332_p1;
reg   [7:0] window_buf_0_1_fu_174;
reg   [7:0] window_buf_0_1_1_fu_178;
wire   [7:0] window_buf_0_2_fu_385_p4;
reg   [7:0] window_buf_1_1_fu_182;
reg   [7:0] window_buf_1_1_1_fu_186;
reg   [7:0] window_buf_2_1_fu_190;
reg   [7:0] window_buf_2_1_1_fu_194;
reg    ap_block_pp0_stage0_01001;
wire  signed [31:0] grp_fu_272_p0;
wire   [8:0] tmp_1_fu_292_p4;
wire   [0:0] icmp_ln299_fu_302_p2;
wire   [0:0] icmp_ln299_1_fu_308_p2;
wire   [8:0] tmp_7_fu_337_p4;
wire   [0:0] icmp_ln299_2_fu_347_p2;
wire   [0:0] icmp_ln299_3_fu_353_p2;
wire   [0:0] and_ln299_fu_359_p2;
wire   [15:0] tmp_fu_405_p4;
wire   [8:0] zext_ln254_cast10_i_s_fu_424_p1;
wire   [8:0] zext_ln254_fu_428_p1;
wire   [8:0] sub_ln254_fu_432_p2;
wire   [8:0] shl_ln_fu_442_p3;
wire   [10:0] zext_ln254_1_fu_450_p1;
wire  signed [10:0] sext_ln254_fu_438_p1;
wire   [8:0] shl_ln1_fu_460_p3;
wire   [8:0] add_ln261_fu_472_p2;
wire   [9:0] zext_ln261_1_fu_478_p1;
wire   [9:0] zext_ln261_fu_468_p1;
wire   [8:0] shl_ln254_1_fu_516_p3;
wire   [10:0] zext_ln254_2_fu_523_p1;
wire   [10:0] sub_ln254_1_fu_527_p2;
wire   [10:0] zext_ln254_3_fu_532_p1;
wire   [10:0] add_ln254_1_fu_536_p2;
wire   [10:0] zext_ln254_4_fu_542_p1;
wire   [10:0] zext_ln261_2_fu_551_p1;
wire   [8:0] shl_ln261_1_fu_560_p3;
wire   [10:0] sub_ln261_fu_554_p2;
wire   [10:0] zext_ln261_3_fu_567_p1;
wire   [10:0] sub_ln261_1_fu_571_p2;
wire   [18:0] shl_ln2_fu_589_p3;
wire  signed [19:0] grp_fu_605_p0;
wire   [31:0] p_Val2_s_fu_625_p1;
wire   [22:0] tmp_V_1_fu_646_p1;
wire   [24:0] mantissa_V_fu_650_p4;
wire   [7:0] tmp_V_fu_636_p4;
wire   [8:0] zext_ln339_fu_664_p1;
wire   [8:0] add_ln339_fu_668_p2;
wire   [7:0] sub_ln1311_fu_682_p2;
wire   [0:0] isNeg_fu_674_p3;
wire  signed [8:0] sext_ln1311_fu_688_p1;
wire  signed [8:0] ush_fu_692_p3;
wire  signed [31:0] sext_ln1311_1_fu_700_p1;
wire  signed [24:0] sext_ln1311_2_fu_704_p1;
wire   [78:0] zext_ln682_fu_660_p1;
wire   [78:0] zext_ln1287_fu_708_p1;
wire   [24:0] r_V_fu_712_p2;
wire   [0:0] tmp_5_fu_724_p3;
wire   [78:0] r_V_1_fu_718_p2;
wire   [31:0] zext_ln662_fu_732_p1;
wire   [31:0] tmp_3_fu_736_p4;
wire   [31:0] result_V_1_fu_754_p2;
wire   [31:0] p_Val2_6_fu_759_p3;
wire   [23:0] tmp_6_fu_765_p4;
wire   [0:0] icmp_ln268_fu_775_p2;
wire   [7:0] trunc_ln301_fu_781_p1;
wire   [19:0] grp_fu_605_p2;
wire   [0:0] icmp_ln282_fu_797_p2;
wire   [0:0] icmp_ln282_1_fu_803_p2;
wire   [0:0] icmp_ln290_fu_827_p2;
wire   [0:0] icmp_ln290_1_fu_833_p2;
wire   [0:0] and_ln290_fu_839_p2;
wire   [0:0] and_ln282_1_fu_853_p2;
wire   [0:0] icmp_ln286_1_fu_821_p2;
wire   [0:0] xor_ln282_fu_859_p2;
wire   [0:0] and_ln286_fu_865_p2;
wire   [0:0] icmp_ln286_fu_815_p2;
wire   [0:0] and_ln286_1_fu_871_p2;
wire   [0:0] xor_ln286_fu_877_p2;
wire   [0:0] and_ln282_fu_809_p2;
wire   [0:0] or_ln286_fu_891_p2;
wire   [1:0] select_ln286_fu_883_p3;
wire   [1:0] select_ln290_fu_845_p3;
wire  signed [10:0] mul_ln265_fu_906_p0;
wire  signed [21:0] sext_ln261_fu_615_p1;
wire  signed [10:0] mul_ln265_fu_906_p1;
wire  signed [10:0] grp_fu_912_p0;
wire  signed [21:0] sext_ln265_fu_618_p1;
wire  signed [10:0] grp_fu_912_p1;
reg    grp_fu_272_ce;
reg    grp_fu_275_ce;
reg    grp_fu_605_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
end

Sobel_1920u_1080ufYi #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
line_buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buf_address0),
    .ce0(line_buf_ce0),
    .q0(line_buf_q0),
    .address1(line_buf_addr_reg_978),
    .ce1(line_buf_ce1),
    .we1(line_buf_we1),
    .d1(line_buf_d1)
);

canny_edge_rectang8j #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
canny_edge_rectang8j_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_272_p0),
    .ce(grp_fu_272_ce),
    .dout(grp_fu_272_p1)
);

canny_edge_rectanhbi #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
canny_edge_rectanhbi_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(x_assign_reg_1053),
    .ce(grp_fu_275_ce),
    .dout(grp_fu_275_p2)
);

canny_edge_rectanibs #(
    .ID( 1 ),
    .NUM_STAGE( 24 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
canny_edge_rectanibs_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_605_p0),
    .din1(sub_ln254_2_fu_545_p2),
    .ce(grp_fu_605_ce),
    .dout(grp_fu_605_p2)
);

canny_edge_rectanjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 22 ))
canny_edge_rectanjbC_U29(
    .din0(mul_ln265_fu_906_p0),
    .din1(mul_ln265_fu_906_p1),
    .dout(mul_ln265_fu_906_p2)
);

canny_edge_rectankbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
canny_edge_rectankbM_U30(
    .din0(grp_fu_912_p0),
    .din1(grp_fu_912_p1),
    .din2(mul_ln265_reg_1038),
    .dout(grp_fu_912_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln220_fu_280_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((icmp_ln221_fu_320_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln220_fu_280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end else if (((icmp_ln220_fu_280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter26 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln274_reg_1024_pp0_iter24_reg == 1'd0) & (icmp_ln221_reg_969_pp0_iter24_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter26_t_int_0_i_reg_261 <= t_int_fu_793_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter26_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter25_t_int_0_i_reg_261;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln274_fu_583_p2 == 1'd1) & (icmp_ln221_reg_969_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_t_int_0_i_reg_261 <= 32'd2147483647;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter2_t_int_0_i_reg_261;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        xi_0_i_reg_250 <= xi_fu_326_p2;
    end else if (((icmp_ln220_fu_280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        xi_0_i_reg_250 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        yi_0_i_reg_239 <= yi_reg_959;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        yi_0_i_reg_239 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_reg_969 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln254_reg_1004 <= add_ln254_fu_454_p2;
        add_ln261_1_reg_1009 <= add_ln261_1_fu_482_p2;
        window_buf_1_2_reg_994 <= {{line_buf_q0[23:16]}};
        window_buf_2_2_reg_999 <= fifo2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_reg_969_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln265_reg_1043 <= grp_fu_912_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln220_fu_280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        and_ln299_1_reg_964 <= and_ln299_1_fu_314_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln299_2_reg_984 <= and_ln299_2_fu_365_p2;
        line_buf_addr_reg_978 <= zext_ln231_fu_332_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln299_2_reg_984_pp0_iter10_reg <= and_ln299_2_reg_984_pp0_iter9_reg;
        and_ln299_2_reg_984_pp0_iter11_reg <= and_ln299_2_reg_984_pp0_iter10_reg;
        and_ln299_2_reg_984_pp0_iter12_reg <= and_ln299_2_reg_984_pp0_iter11_reg;
        and_ln299_2_reg_984_pp0_iter13_reg <= and_ln299_2_reg_984_pp0_iter12_reg;
        and_ln299_2_reg_984_pp0_iter14_reg <= and_ln299_2_reg_984_pp0_iter13_reg;
        and_ln299_2_reg_984_pp0_iter15_reg <= and_ln299_2_reg_984_pp0_iter14_reg;
        and_ln299_2_reg_984_pp0_iter16_reg <= and_ln299_2_reg_984_pp0_iter15_reg;
        and_ln299_2_reg_984_pp0_iter17_reg <= and_ln299_2_reg_984_pp0_iter16_reg;
        and_ln299_2_reg_984_pp0_iter18_reg <= and_ln299_2_reg_984_pp0_iter17_reg;
        and_ln299_2_reg_984_pp0_iter19_reg <= and_ln299_2_reg_984_pp0_iter18_reg;
        and_ln299_2_reg_984_pp0_iter20_reg <= and_ln299_2_reg_984_pp0_iter19_reg;
        and_ln299_2_reg_984_pp0_iter21_reg <= and_ln299_2_reg_984_pp0_iter20_reg;
        and_ln299_2_reg_984_pp0_iter22_reg <= and_ln299_2_reg_984_pp0_iter21_reg;
        and_ln299_2_reg_984_pp0_iter23_reg <= and_ln299_2_reg_984_pp0_iter22_reg;
        and_ln299_2_reg_984_pp0_iter24_reg <= and_ln299_2_reg_984_pp0_iter23_reg;
        and_ln299_2_reg_984_pp0_iter25_reg <= and_ln299_2_reg_984_pp0_iter24_reg;
        and_ln299_2_reg_984_pp0_iter2_reg <= and_ln299_2_reg_984_pp0_iter1_reg;
        and_ln299_2_reg_984_pp0_iter3_reg <= and_ln299_2_reg_984_pp0_iter2_reg;
        and_ln299_2_reg_984_pp0_iter4_reg <= and_ln299_2_reg_984_pp0_iter3_reg;
        and_ln299_2_reg_984_pp0_iter5_reg <= and_ln299_2_reg_984_pp0_iter4_reg;
        and_ln299_2_reg_984_pp0_iter6_reg <= and_ln299_2_reg_984_pp0_iter5_reg;
        and_ln299_2_reg_984_pp0_iter7_reg <= and_ln299_2_reg_984_pp0_iter6_reg;
        and_ln299_2_reg_984_pp0_iter8_reg <= and_ln299_2_reg_984_pp0_iter7_reg;
        and_ln299_2_reg_984_pp0_iter9_reg <= and_ln299_2_reg_984_pp0_iter8_reg;
        icmp_ln221_reg_969_pp0_iter10_reg <= icmp_ln221_reg_969_pp0_iter9_reg;
        icmp_ln221_reg_969_pp0_iter11_reg <= icmp_ln221_reg_969_pp0_iter10_reg;
        icmp_ln221_reg_969_pp0_iter12_reg <= icmp_ln221_reg_969_pp0_iter11_reg;
        icmp_ln221_reg_969_pp0_iter13_reg <= icmp_ln221_reg_969_pp0_iter12_reg;
        icmp_ln221_reg_969_pp0_iter14_reg <= icmp_ln221_reg_969_pp0_iter13_reg;
        icmp_ln221_reg_969_pp0_iter15_reg <= icmp_ln221_reg_969_pp0_iter14_reg;
        icmp_ln221_reg_969_pp0_iter16_reg <= icmp_ln221_reg_969_pp0_iter15_reg;
        icmp_ln221_reg_969_pp0_iter17_reg <= icmp_ln221_reg_969_pp0_iter16_reg;
        icmp_ln221_reg_969_pp0_iter18_reg <= icmp_ln221_reg_969_pp0_iter17_reg;
        icmp_ln221_reg_969_pp0_iter19_reg <= icmp_ln221_reg_969_pp0_iter18_reg;
        icmp_ln221_reg_969_pp0_iter20_reg <= icmp_ln221_reg_969_pp0_iter19_reg;
        icmp_ln221_reg_969_pp0_iter21_reg <= icmp_ln221_reg_969_pp0_iter20_reg;
        icmp_ln221_reg_969_pp0_iter22_reg <= icmp_ln221_reg_969_pp0_iter21_reg;
        icmp_ln221_reg_969_pp0_iter23_reg <= icmp_ln221_reg_969_pp0_iter22_reg;
        icmp_ln221_reg_969_pp0_iter24_reg <= icmp_ln221_reg_969_pp0_iter23_reg;
        icmp_ln221_reg_969_pp0_iter2_reg <= icmp_ln221_reg_969_pp0_iter1_reg;
        icmp_ln221_reg_969_pp0_iter3_reg <= icmp_ln221_reg_969_pp0_iter2_reg;
        icmp_ln221_reg_969_pp0_iter4_reg <= icmp_ln221_reg_969_pp0_iter3_reg;
        icmp_ln221_reg_969_pp0_iter5_reg <= icmp_ln221_reg_969_pp0_iter4_reg;
        icmp_ln221_reg_969_pp0_iter6_reg <= icmp_ln221_reg_969_pp0_iter5_reg;
        icmp_ln221_reg_969_pp0_iter7_reg <= icmp_ln221_reg_969_pp0_iter6_reg;
        icmp_ln221_reg_969_pp0_iter8_reg <= icmp_ln221_reg_969_pp0_iter7_reg;
        icmp_ln221_reg_969_pp0_iter9_reg <= icmp_ln221_reg_969_pp0_iter8_reg;
        icmp_ln274_reg_1024_pp0_iter10_reg <= icmp_ln274_reg_1024_pp0_iter9_reg;
        icmp_ln274_reg_1024_pp0_iter11_reg <= icmp_ln274_reg_1024_pp0_iter10_reg;
        icmp_ln274_reg_1024_pp0_iter12_reg <= icmp_ln274_reg_1024_pp0_iter11_reg;
        icmp_ln274_reg_1024_pp0_iter13_reg <= icmp_ln274_reg_1024_pp0_iter12_reg;
        icmp_ln274_reg_1024_pp0_iter14_reg <= icmp_ln274_reg_1024_pp0_iter13_reg;
        icmp_ln274_reg_1024_pp0_iter15_reg <= icmp_ln274_reg_1024_pp0_iter14_reg;
        icmp_ln274_reg_1024_pp0_iter16_reg <= icmp_ln274_reg_1024_pp0_iter15_reg;
        icmp_ln274_reg_1024_pp0_iter17_reg <= icmp_ln274_reg_1024_pp0_iter16_reg;
        icmp_ln274_reg_1024_pp0_iter18_reg <= icmp_ln274_reg_1024_pp0_iter17_reg;
        icmp_ln274_reg_1024_pp0_iter19_reg <= icmp_ln274_reg_1024_pp0_iter18_reg;
        icmp_ln274_reg_1024_pp0_iter20_reg <= icmp_ln274_reg_1024_pp0_iter19_reg;
        icmp_ln274_reg_1024_pp0_iter21_reg <= icmp_ln274_reg_1024_pp0_iter20_reg;
        icmp_ln274_reg_1024_pp0_iter22_reg <= icmp_ln274_reg_1024_pp0_iter21_reg;
        icmp_ln274_reg_1024_pp0_iter23_reg <= icmp_ln274_reg_1024_pp0_iter22_reg;
        icmp_ln274_reg_1024_pp0_iter24_reg <= icmp_ln274_reg_1024_pp0_iter23_reg;
        icmp_ln274_reg_1024_pp0_iter3_reg <= icmp_ln274_reg_1024;
        icmp_ln274_reg_1024_pp0_iter4_reg <= icmp_ln274_reg_1024_pp0_iter3_reg;
        icmp_ln274_reg_1024_pp0_iter5_reg <= icmp_ln274_reg_1024_pp0_iter4_reg;
        icmp_ln274_reg_1024_pp0_iter6_reg <= icmp_ln274_reg_1024_pp0_iter5_reg;
        icmp_ln274_reg_1024_pp0_iter7_reg <= icmp_ln274_reg_1024_pp0_iter6_reg;
        icmp_ln274_reg_1024_pp0_iter8_reg <= icmp_ln274_reg_1024_pp0_iter7_reg;
        icmp_ln274_reg_1024_pp0_iter9_reg <= icmp_ln274_reg_1024_pp0_iter8_reg;
        select_ln301_reg_1074_pp0_iter24_reg <= select_ln301_reg_1074;
        select_ln301_reg_1074_pp0_iter25_reg <= select_ln301_reg_1074_pp0_iter24_reg;
        sub_ln261_2_reg_1019_pp0_iter3_reg <= sub_ln261_2_reg_1019;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln299_2_reg_984_pp0_iter1_reg <= and_ln299_2_reg_984;
        icmp_ln221_reg_969 <= icmp_ln221_fu_320_p2;
        icmp_ln221_reg_969_pp0_iter1_reg <= icmp_ln221_reg_969;
        window_buf_2_1_2_reg_988 <= window_buf_2_1_1_fu_194;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter9_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter10_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter11_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter12_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter13_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter14_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter15_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter16_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter17_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter18_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter0_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter20_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter19_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter21_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter20_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter22_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter21_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter23_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter22_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter24_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter23_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter25_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter24_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter1_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter3_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter4_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter5_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter6_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter7_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_t_int_0_i_reg_261 <= ap_phi_reg_pp0_iter8_t_int_0_i_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_reg_969_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln274_reg_1024 <= icmp_ln274_fu_583_p2;
        sub_ln254_2_reg_1014 <= sub_ln254_2_fu_545_p2;
        sub_ln261_2_reg_1019 <= sub_ln261_2_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_reg_969_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln265_reg_1038 <= mul_ln265_fu_906_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_reg_969_pp0_iter21_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_s_reg_1063 <= p_Val2_s_fu_625_p1[32'd31];
        p_Val2_5_reg_1068 <= p_Val2_5_fu_746_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln299_2_reg_984_pp0_iter22_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln301_reg_1074 <= select_ln301_fu_785_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_reg_969 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        window_buf_0_1_1_fu_178 <= {{line_buf_q0[15:8]}};
        window_buf_0_1_fu_174 <= window_buf_0_1_1_fu_178;
        window_buf_1_1_1_fu_186 <= {{line_buf_q0[23:16]}};
        window_buf_1_1_fu_182 <= window_buf_1_1_1_fu_186;
        window_buf_2_1_1_fu_194 <= fifo2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_reg_969_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        window_buf_2_1_fu_190 <= window_buf_2_1_2_reg_988;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_reg_969_pp0_iter20_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_assign_2_reg_1058 <= grp_fu_275_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_reg_969_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_assign_reg_1053 <= grp_fu_272_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        yi_reg_959 <= yi_fu_286_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln220_fu_280_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln221_reg_969 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo2_blk_n = fifo2_empty_n;
    end else begin
        fifo2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln221_reg_969 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo2_read = 1'b1;
    end else begin
        fifo2_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter26 == 1'b1)) | ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter26 == 1'b1)))) begin
        fifo3_grad_blk_n = fifo3_grad_full_n;
    end else begin
        fifo3_grad_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg) & (ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg) & (ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        fifo3_grad_write = 1'b1;
    end else begin
        fifo3_grad_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter26 == 1'b1)) | ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter26 == 1'b1)))) begin
        fifo3_value_blk_n = fifo3_value_full_n;
    end else begin
        fifo3_value_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        if ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg)) begin
            fifo3_value_din = select_ln301_reg_1074_pp0_iter25_reg;
        end else if ((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg)) begin
            fifo3_value_din = 8'd0;
        end else begin
            fifo3_value_din = 'bx;
        end
    end else begin
        fifo3_value_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg) & (ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg) & (ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        fifo3_value_write = 1'b1;
    end else begin
        fifo3_value_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_272_ce = 1'b1;
    end else begin
        grp_fu_272_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_275_ce = 1'b1;
    end else begin
        grp_fu_275_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_605_ce = 1'b1;
    end else begin
        grp_fu_605_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln220_fu_280_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buf_ce0 = 1'b1;
    end else begin
        line_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buf_ce1 = 1'b1;
    end else begin
        line_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln221_reg_969 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buf_we1 = 1'b1;
    end else begin
        line_buf_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln220_fu_280_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter25 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter26 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter25 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter26 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln254_1_fu_536_p2 = (sub_ln254_1_fu_527_p2 + zext_ln254_3_fu_532_p1);

assign add_ln254_fu_454_p2 = ($signed(zext_ln254_1_fu_450_p1) + $signed(sext_ln254_fu_438_p1));

assign add_ln261_1_fu_482_p2 = (zext_ln261_1_fu_478_p1 + zext_ln261_fu_468_p1);

assign add_ln261_fu_472_p2 = (zext_ln254_cast10_i_s_fu_424_p1 + zext_ln254_fu_428_p1);

assign add_ln339_fu_668_p2 = ($signed(9'd385) + $signed(zext_ln339_fu_664_p1));

assign and_ln282_1_fu_853_p2 = (icmp_ln282_fu_797_p2 & icmp_ln282_1_fu_803_p2);

assign and_ln282_fu_809_p2 = (icmp_ln282_fu_797_p2 & icmp_ln282_1_fu_803_p2);

assign and_ln286_1_fu_871_p2 = (icmp_ln286_fu_815_p2 & and_ln286_fu_865_p2);

assign and_ln286_fu_865_p2 = (xor_ln282_fu_859_p2 & icmp_ln286_1_fu_821_p2);

assign and_ln290_fu_839_p2 = (icmp_ln290_fu_827_p2 & icmp_ln290_1_fu_833_p2);

assign and_ln299_1_fu_314_p2 = (icmp_ln299_fu_302_p2 & icmp_ln299_1_fu_308_p2);

assign and_ln299_2_fu_365_p2 = (and_ln299_fu_359_p2 & and_ln299_1_reg_964);

assign and_ln299_fu_359_p2 = (icmp_ln299_3_fu_353_p2 & icmp_ln299_2_fu_347_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter26 == 1'b1) & (((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_grad_full_n == 1'b0)) | ((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_value_full_n == 1'b0)) | ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_grad_full_n == 1'b0)) | ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_value_full_n == 1'b0)))) | ((icmp_ln221_reg_969 == 1'd0) & (fifo2_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter26 == 1'b1) & (((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_grad_full_n == 1'b0)) | ((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_value_full_n == 1'b0)) | ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_grad_full_n == 1'b0)) | ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_value_full_n == 1'b0)))) | ((icmp_ln221_reg_969 == 1'd0) & (fifo2_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter26 == 1'b1) & (((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_grad_full_n == 1'b0)) | ((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_value_full_n == 1'b0)) | ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_grad_full_n == 1'b0)) | ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_value_full_n == 1'b0)))) | ((icmp_ln221_reg_969 == 1'd0) & (fifo2_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp0_stage0_iter26 = (((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_grad_full_n == 1'b0)) | ((1'd0 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_value_full_n == 1'b0)) | ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_grad_full_n == 1'b0)) | ((1'd1 == and_ln299_2_reg_984_pp0_iter25_reg) & (fifo3_value_full_n == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((icmp_ln221_reg_969 == 1'd0) & (fifo2_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_t_int_0_i_reg_261 = 'bx;

assign ap_ready = internal_ap_ready;

assign fifo3_grad_din = ((or_ln286_fu_891_p2[0:0] === 1'b1) ? select_ln286_fu_883_p3 : select_ln290_fu_845_p3);

assign grp_fu_272_p0 = add_ln265_reg_1043;

assign grp_fu_605_p0 = $signed(shl_ln2_fu_589_p3);

assign grp_fu_912_p0 = sext_ln265_fu_618_p1;

assign grp_fu_912_p1 = sext_ln265_fu_618_p1;

assign icmp_ln220_fu_280_p2 = ((yi_0_i_reg_239 == 11'd1080) ? 1'b1 : 1'b0);

assign icmp_ln221_fu_320_p2 = ((xi_0_i_reg_250 == 11'd1920) ? 1'b1 : 1'b0);

assign icmp_ln268_fu_775_p2 = (($signed(tmp_6_fu_765_p4) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln274_fu_583_p2 = ((add_ln254_1_fu_536_p2 == zext_ln254_4_fu_542_p1) ? 1'b1 : 1'b0);

assign icmp_ln282_1_fu_803_p2 = (($signed(ap_phi_reg_pp0_iter26_t_int_0_i_reg_261) < $signed(32'd4294967191)) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_797_p2 = (($signed(ap_phi_reg_pp0_iter26_t_int_0_i_reg_261) > $signed(32'd4294966678)) ? 1'b1 : 1'b0);

assign icmp_ln286_1_fu_821_p2 = (($signed(ap_phi_reg_pp0_iter26_t_int_0_i_reg_261) < $signed(32'd107)) ? 1'b1 : 1'b0);

assign icmp_ln286_fu_815_p2 = (($signed(ap_phi_reg_pp0_iter26_t_int_0_i_reg_261) > $signed(32'd4294967190)) ? 1'b1 : 1'b0);

assign icmp_ln290_1_fu_833_p2 = (($signed(ap_phi_reg_pp0_iter26_t_int_0_i_reg_261) < $signed(32'd618)) ? 1'b1 : 1'b0);

assign icmp_ln290_fu_827_p2 = (($signed(ap_phi_reg_pp0_iter26_t_int_0_i_reg_261) > $signed(32'd106)) ? 1'b1 : 1'b0);

assign icmp_ln299_1_fu_308_p2 = ((yi_0_i_reg_239 < 11'd1077) ? 1'b1 : 1'b0);

assign icmp_ln299_2_fu_347_p2 = ((tmp_7_fu_337_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln299_3_fu_353_p2 = ((xi_0_i_reg_250 < 11'd1917) ? 1'b1 : 1'b0);

assign icmp_ln299_fu_302_p2 = ((tmp_1_fu_292_p4 != 9'd0) ? 1'b1 : 1'b0);

assign isNeg_fu_674_p3 = add_ln339_fu_668_p2[32'd8];

assign line_buf_address0 = zext_ln231_fu_332_p1;

assign line_buf_d1 = {{fifo2_dout}, {tmp_fu_405_p4}};

assign mantissa_V_fu_650_p4 = {{{{1'd1}, {tmp_V_1_fu_646_p1}}}, {1'd0}};

assign mul_ln265_fu_906_p0 = sext_ln261_fu_615_p1;

assign mul_ln265_fu_906_p1 = sext_ln261_fu_615_p1;

assign or_ln286_fu_891_p2 = (and_ln286_1_fu_871_p2 | and_ln282_fu_809_p2);

assign p_Val2_5_fu_746_p3 = ((isNeg_fu_674_p3[0:0] === 1'b1) ? zext_ln662_fu_732_p1 : tmp_3_fu_736_p4);

assign p_Val2_6_fu_759_p3 = ((p_Result_s_reg_1063[0:0] === 1'b1) ? result_V_1_fu_754_p2 : p_Val2_5_reg_1068);

assign p_Val2_s_fu_625_p1 = x_assign_2_reg_1058;

assign r_V_1_fu_718_p2 = zext_ln682_fu_660_p1 << zext_ln1287_fu_708_p1;

assign r_V_fu_712_p2 = mantissa_V_fu_650_p4 >> sext_ln1311_2_fu_704_p1;

assign result_V_1_fu_754_p2 = (32'd0 - p_Val2_5_reg_1068);

assign select_ln286_fu_883_p3 = ((xor_ln286_fu_877_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign select_ln290_fu_845_p3 = ((and_ln290_fu_839_p2[0:0] === 1'b1) ? 2'd1 : 2'd2);

assign select_ln301_fu_785_p3 = ((icmp_ln268_fu_775_p2[0:0] === 1'b1) ? 8'd255 : trunc_ln301_fu_781_p1);

assign sext_ln1311_1_fu_700_p1 = ush_fu_692_p3;

assign sext_ln1311_2_fu_704_p1 = ush_fu_692_p3;

assign sext_ln1311_fu_688_p1 = $signed(sub_ln1311_fu_682_p2);

assign sext_ln254_fu_438_p1 = $signed(sub_ln254_fu_432_p2);

assign sext_ln261_fu_615_p1 = sub_ln254_2_reg_1014;

assign sext_ln265_fu_618_p1 = sub_ln261_2_reg_1019_pp0_iter3_reg;

assign shl_ln1_fu_460_p3 = {{window_buf_0_1_1_fu_178}, {1'd0}};

assign shl_ln254_1_fu_516_p3 = {{window_buf_1_2_reg_994}, {1'd0}};

assign shl_ln261_1_fu_560_p3 = {{window_buf_2_1_2_reg_988}, {1'd0}};

assign shl_ln2_fu_589_p3 = {{sub_ln261_2_fu_577_p2}, {8'd0}};

assign shl_ln_fu_442_p3 = {{window_buf_1_1_fu_182}, {1'd0}};

assign start_out = real_start;

assign sub_ln1311_fu_682_p2 = (8'd127 - tmp_V_fu_636_p4);

assign sub_ln254_1_fu_527_p2 = (add_ln254_reg_1004 - zext_ln254_2_fu_523_p1);

assign sub_ln254_2_fu_545_p2 = (add_ln254_1_fu_536_p2 - zext_ln254_4_fu_542_p1);

assign sub_ln254_fu_432_p2 = (zext_ln254_cast10_i_s_fu_424_p1 - zext_ln254_fu_428_p1);

assign sub_ln261_1_fu_571_p2 = (sub_ln261_fu_554_p2 - zext_ln261_3_fu_567_p1);

assign sub_ln261_2_fu_577_p2 = (sub_ln261_1_fu_571_p2 - zext_ln254_4_fu_542_p1);

assign sub_ln261_fu_554_p2 = (zext_ln261_2_fu_551_p1 - zext_ln254_3_fu_532_p1);

assign t_int_fu_793_p1 = $signed(grp_fu_605_p2);

assign tmp_1_fu_292_p4 = {{yi_0_i_reg_239[10:2]}};

assign tmp_3_fu_736_p4 = {{r_V_1_fu_718_p2[55:24]}};

assign tmp_5_fu_724_p3 = r_V_fu_712_p2[32'd24];

assign tmp_6_fu_765_p4 = {{p_Val2_6_fu_759_p3[31:8]}};

assign tmp_7_fu_337_p4 = {{xi_0_i_reg_250[10:2]}};

assign tmp_V_1_fu_646_p1 = p_Val2_s_fu_625_p1[22:0];

assign tmp_V_fu_636_p4 = {{p_Val2_s_fu_625_p1[30:23]}};

assign tmp_fu_405_p4 = {{line_buf_q0[23:8]}};

assign trunc_ln301_fu_781_p1 = p_Val2_6_fu_759_p3[7:0];

assign ush_fu_692_p3 = ((isNeg_fu_674_p3[0:0] === 1'b1) ? sext_ln1311_fu_688_p1 : add_ln339_fu_668_p2);

assign window_buf_0_2_fu_385_p4 = {{line_buf_q0[15:8]}};

assign xi_fu_326_p2 = (xi_0_i_reg_250 + 11'd1);

assign xor_ln282_fu_859_p2 = (1'd1 ^ and_ln282_1_fu_853_p2);

assign xor_ln286_fu_877_p2 = (1'd1 ^ and_ln286_1_fu_871_p2);

assign yi_fu_286_p2 = (yi_0_i_reg_239 + 11'd1);

assign zext_ln1287_fu_708_p1 = $unsigned(sext_ln1311_1_fu_700_p1);

assign zext_ln231_fu_332_p1 = xi_0_i_reg_250;

assign zext_ln254_1_fu_450_p1 = shl_ln_fu_442_p3;

assign zext_ln254_2_fu_523_p1 = shl_ln254_1_fu_516_p3;

assign zext_ln254_3_fu_532_p1 = window_buf_2_1_fu_190;

assign zext_ln254_4_fu_542_p1 = window_buf_2_2_reg_999;

assign zext_ln254_cast10_i_s_fu_424_p1 = window_buf_0_1_fu_174;

assign zext_ln254_fu_428_p1 = window_buf_0_2_fu_385_p4;

assign zext_ln261_1_fu_478_p1 = add_ln261_fu_472_p2;

assign zext_ln261_2_fu_551_p1 = add_ln261_1_reg_1009;

assign zext_ln261_3_fu_567_p1 = shl_ln261_1_fu_560_p3;

assign zext_ln261_fu_468_p1 = shl_ln1_fu_460_p3;

assign zext_ln339_fu_664_p1 = tmp_V_fu_636_p4;

assign zext_ln662_fu_732_p1 = tmp_5_fu_724_p3;

assign zext_ln682_fu_660_p1 = mantissa_V_fu_650_p4;

endmodule //Sobel_1920u_1080u_s
